// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ZenTime.Api.Database;

namespace ZenTime.Api.Migrations
{
    [DbContext(typeof(ZenTimeDbContext))]
    [Migration("20200616080945_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("zt")
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ZenTime.Api.Database.Entities.TimeSheetEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<int>("DurationInMins")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("StartedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("TimeSheetTaskDefinitionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TimeSheetTaskDefinitionId");

                    b.ToTable("TimeSheetEntries");
                });

            modelBuilder.Entity("ZenTime.Api.Database.Entities.TimeSheetProjectDefinition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("ProjectDefinitions");
                });

            modelBuilder.Entity("ZenTime.Api.Database.Entities.TimeSheetTaskDefinition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("DetailsRequired")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("TimeSheetProjectDefinitionId")
                        .HasColumnType("int");

                    b.Property<int?>("WeeklyTargetHours")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TimeSheetProjectDefinitionId");

                    b.ToTable("TaskDefinitions");
                });

            modelBuilder.Entity("ZenTime.Api.Database.Entities.TimeSheetEntry", b =>
                {
                    b.HasOne("ZenTime.Api.Database.Entities.TimeSheetTaskDefinition", "Task")
                        .WithMany()
                        .HasForeignKey("TimeSheetTaskDefinitionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ZenTime.Api.Database.Entities.TimeSheetTaskDefinition", b =>
                {
                    b.HasOne("ZenTime.Api.Database.Entities.TimeSheetProjectDefinition", "Project")
                        .WithMany("Tasks")
                        .HasForeignKey("TimeSheetProjectDefinitionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
